[{"/Users/adam/fintech-dashboard/src/components/Taxonomy/index.js":"1","/Users/adam/fintech-dashboard/src/components/Taxonomy/Map/index.js":"2","/Users/adam/fintech-dashboard/src/components/Taxonomy/Filters/Accordion.js":"3","/Users/adam/fintech-dashboard/src/components/App.js":"4","/Users/adam/fintech-dashboard/src/components/Taxonomy/List/index.js":"5","/Users/adam/fintech-dashboard/src/components/Taxonomy/List/SelectTable.js":"6","/Users/adam/fintech-dashboard/src/components/Comparison/index.js":"7","/Users/adam/fintech-dashboard/src/components/Comparison/Metric/2X2.d3.js":"8","/Users/adam/fintech-dashboard/src/components/Comparison/List/Table.js":"9","/Users/adam/fintech-dashboard/src/components/Comparison/Metric/index.js":"10","/Users/adam/fintech-dashboard/src/components/Taxonomy/Map/MapGrid.js":"11","/Users/adam/fintech-dashboard/src/components/Comparison/List/index.js":"12","/Users/adam/fintech-dashboard/src/components/Analytics/index.js":"13","/Users/adam/fintech-dashboard/src/components/Analytics/Metric/index.js":"14","/Users/adam/fintech-dashboard/src/components/Analytics/Metric/StackedBar.d3.js":"15","/Users/adam/fintech-dashboard/src/contexts/FundingContext.js":"16","/Users/adam/fintech-dashboard/src/hooks/useIsMobile.js":"17","/Users/adam/fintech-dashboard/src/components/Profile/index.js":"18","/Users/adam/fintech-dashboard/src/components/Profile/Sidebar.js":"19","/Users/adam/fintech-dashboard/src/components/shared/MPButtonGroup.js":"20","/Users/adam/fintech-dashboard/src/components/Header.js":"21","/Users/adam/fintech-dashboard/src/contexts/TaxonomyContext.js":"22","/Users/adam/fintech-dashboard/src/icons/List.js":"23","/Users/adam/fintech-dashboard/src/icons/Chart.js":"24","/Users/adam/fintech-dashboard/src/icons/Export.js":"25","/Users/adam/fintech-dashboard/src/components/shared/AntTab.js":"26","/Users/adam/fintech-dashboard/src/components/Comparison/Filters/index.js":"27","/Users/adam/fintech-dashboard/src/contexts/CompaniesContext.js":"28","/Users/adam/fintech-dashboard/src/icons/Dashboard.js":"29","/Users/adam/fintech-dashboard/src/data.js":"30","/Users/adam/fintech-dashboard/src/icons/Bubble.js":"31","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/Bubble.d3.js":"32","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Map/MapGrid.js":"33","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/index.js":"34","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Tree.js":"35","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Map/index.js":"36","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/index.js":"37","/Users/adam/fintech-dashboard/src/contexts/createDataContext.js":"38","/Users/adam/fintech-dashboard/src/components/Breadcrumbs.js":"39","/Users/adam/fintech-dashboard/src/components/Taxonomy/Filters/index.js":"40","/Users/adam/fintech-dashboard/src/components/Taxonomy/List/ColumnFilter.js":"41","/Users/adam/fintech-dashboard/src/index.js":"42","/Users/adam/fintech-dashboard/src/components/Profile/Navigation.js":"43","/Users/adam/fintech-dashboard/src/icons/Filter.js":"44","/Users/adam/fintech-dashboard/src/components/shared/Accordion.js":"45","/Users/adam/fintech-dashboard/src/icons/Swap.js":"46","/Users/adam/fintech-dashboard/src/components/shared/MPButton.js":"47","/Users/adam/fintech-dashboard/src/data/logos.js":"48","/Users/adam/fintech-dashboard/src/components/Comparison/Filters/XCheckboxes.js":"49","/Users/adam/fintech-dashboard/src/components/Comparison/Filters/YCheckboxes.js":"50","/Users/adam/fintech-dashboard/src/theme.js":"51","/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/Sunburst.d3.js":"52"},{"size":6934,"mtime":1608653246500,"results":"53","hashOfConfig":"54"},{"size":1009,"mtime":1608065153516,"results":"55","hashOfConfig":"54"},{"size":2713,"mtime":1608064178025,"results":"56","hashOfConfig":"54"},{"size":3047,"mtime":1608118006134,"results":"57","hashOfConfig":"54"},{"size":3245,"mtime":1608064295679,"results":"58","hashOfConfig":"54"},{"size":4521,"mtime":1608064236607,"results":"59","hashOfConfig":"54"},{"size":4168,"mtime":1608064583589,"results":"60","hashOfConfig":"54"},{"size":4177,"mtime":1608113013252,"results":"61","hashOfConfig":"54"},{"size":2758,"mtime":1608112969054,"results":"62","hashOfConfig":"54"},{"size":1772,"mtime":1608107522159,"results":"63","hashOfConfig":"54"},{"size":1406,"mtime":1608650159153,"results":"64","hashOfConfig":"54"},{"size":3494,"mtime":1608117945397,"results":"65","hashOfConfig":"54"},{"size":3784,"mtime":1608064803136,"results":"66","hashOfConfig":"54"},{"size":5040,"mtime":1608064817845,"results":"67","hashOfConfig":"54"},{"size":7494,"mtime":1607971909274,"results":"68","hashOfConfig":"54"},{"size":494,"mtime":1608065015970,"results":"69","hashOfConfig":"54"},{"size":216,"mtime":1607891139635,"results":"70","hashOfConfig":"54"},{"size":622,"mtime":1608064536500,"results":"71","hashOfConfig":"54"},{"size":671,"mtime":1608064564188,"results":"72","hashOfConfig":"54"},{"size":288,"mtime":1608064525288,"results":"73","hashOfConfig":"54"},{"size":6639,"mtime":1608108989261,"results":"74","hashOfConfig":"54"},{"size":555,"mtime":1608650098834,"results":"75","hashOfConfig":"54"},{"size":755,"mtime":1607806601467,"results":"76","hashOfConfig":"54"},{"size":3204,"mtime":1607857830533,"results":"77","hashOfConfig":"54"},{"size":509,"mtime":1607886674362,"results":"78","hashOfConfig":"54"},{"size":431,"mtime":1608064470716,"results":"79","hashOfConfig":"54"},{"size":1607,"mtime":1608116788242,"results":"80","hashOfConfig":"54"},{"size":7012,"mtime":1608118037919,"results":"81","hashOfConfig":"54"},{"size":1430,"mtime":1607889662967,"results":"82","hashOfConfig":"54"},{"size":6061,"mtime":1609764076771,"results":"83","hashOfConfig":"54"},{"size":279,"mtime":1608065081677,"results":"84","hashOfConfig":"54"},{"size":5828,"mtime":1608065669151,"results":"85","hashOfConfig":"54"},{"size":1384,"mtime":1608064367225,"results":"86","hashOfConfig":"54"},{"size":1339,"mtime":1608651095665,"results":"87","hashOfConfig":"54"},{"size":3534,"mtime":1608064313152,"results":"88","hashOfConfig":"54"},{"size":615,"mtime":1609759796426,"results":"89","hashOfConfig":"54"},{"size":1294,"mtime":1608655952304,"results":"90","hashOfConfig":"54"},{"size":527,"mtime":1607000064217,"results":"91","hashOfConfig":"54"},{"size":1341,"mtime":1608064124995,"results":"92","hashOfConfig":"54"},{"size":2252,"mtime":1608064196243,"results":"93","hashOfConfig":"54"},{"size":3356,"mtime":1608064219293,"results":"94","hashOfConfig":"54"},{"size":693,"mtime":1607670298406,"results":"95","hashOfConfig":"54"},{"size":3345,"mtime":1608064548620,"results":"96","hashOfConfig":"54"},{"size":1045,"mtime":1607874030599,"results":"97","hashOfConfig":"54"},{"size":704,"mtime":1608064464172,"results":"98","hashOfConfig":"54"},{"size":901,"mtime":1607857644029,"results":"99","hashOfConfig":"54"},{"size":613,"mtime":1608064476325,"results":"100","hashOfConfig":"54"},{"size":1008,"mtime":1607785335718,"results":"101","hashOfConfig":"54"},{"size":1738,"mtime":1608118066640,"results":"102","hashOfConfig":"54"},{"size":1851,"mtime":1608117274607,"results":"103","hashOfConfig":"54"},{"size":245,"mtime":1608065187482,"results":"104","hashOfConfig":"54"},{"size":6246,"mtime":1609764438503,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ucmidx",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"121"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"113"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"196"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adam/fintech-dashboard/src/components/Taxonomy/index.js",["226","227"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Map/index.js",[],["228","229"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Filters/Accordion.js",[],["230","231"],"/Users/adam/fintech-dashboard/src/components/App.js",["232"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/List/index.js",["233"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/List/SelectTable.js",["234"],"import React, { useEffect } from \"react\"\nimport {\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from \"react-table\"\nimport {\n  makeStyles,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  TablePagination,\n  Container,\n} from \"@material-ui/core\"\nimport Pagination from \"material-ui-flat-pagination\"\n\nimport ColumnFilter from \"./ColumnFilter\"\n\nconst useStyles = makeStyles({\n  paper: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pagination: {},\n  pages: {\n    display: \"flex\",\n    padding: \"21px 0px 21px 32px\",\n  },\n  currentPage: {\n    fontWeight: \"bold\",\n  },\n  checkboxCell: {\n    width: \"30px\",\n  },\n  headerCell: {\n    textAlign: \"center\",\n  },\n  tableCell: {\n    textAlign: \"left\",\n  },\n  filterCell: {\n    width: \"60px\"\n  }\n})\n\nconst arrayToMap = arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr]: true }), {})\n\nconst SelectTable = ({ columns, data, selectedRows, setSelectedRows }) => {\n  const classes = useStyles()\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    page,\n    gotoPage,\n    setPageSize,\n    state: { pageIndex, pageSize, selectedRowIds },\n  } = useTable(\n    {\n      columns,\n      data,\n      getRowId: (row, relativeIndex, parent) => row.i,\n      initialState: {\n        selectedRowIds: arrayToMap(selectedRows),\n      },\n      state: {\n        selectedRowIds: arrayToMap(selectedRows),\n      },\n    },\n    useSortBy,\n    usePagination,\n    useRowSelect\n  )\n\n  useEffect(() => {\n    setSelectedRows(selectedRowIds)\n  }, [selectedRowIds])\n\n  return (\n    <>\n      <Table {...getTableProps()} size=\"small\">\n        <TableHead>\n          {headerGroups.map(headerGroup => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => {\n                return (\n                  <TableCell\n                    {...column.getHeaderProps()}\n                    className={\n                      column.id === \"selection\"\n                        ? classes.checkboxCell\n                        : classes.tableCell\n                    }\n                  >\n                    {column.render(\"Header\")}\n                  </TableCell>\n                )\n              })}\n              <TableCell><ColumnFilter /></TableCell>\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <TableRow\n                {...row.getRowProps()}\n                style={{ backgroundColor: i % 2 === 0 ? \"#F8FAFC\" : \"#FFFFFF\" }}\n              >\n                {row.cells.map(cell => {\n                  return (\n                    <TableCell\n                      {...cell.getCellProps()}\n                      className={\n                        cell.column.id === \"selection\"\n                          ? classes.checkboxCell\n                          : classes.tableCell\n                      }\n                    >\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  )\n                })}\n                <TableCell className={classes.filterCell}></TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n      <Container>\n        <TablePagination\n          component={\"div\"}\n          className={classes.pagination}\n          rowsPerPageOptions={[5, 10, 25]}\n          count={rows.length}\n          rowsPerPage={pageSize}\n          page={pageIndex}\n          onChangePage={(e, newPage) => {\n            gotoPage(newPage)\n          }}\n          onChangeRowsPerPage={e => {\n            setPageSize(Number(e.target.value))\n            gotoPage(0)\n          }}\n          ActionsComponent={() => {\n            return (\n              <Pagination\n                reduced={true}\n                fullWidth={true}\n                classes={{\n                  root: classes.pages,\n                  rootCurrent: classes.currentPage,\n                }}\n                limit={pageSize}\n                offset={pageIndex * pageSize}\n                total={rows.length}\n                otherPageColor={\"inherit\"}\n                currentPageColor={\"inherit\"}\n                size={\"small\"}\n                onClick={(e, offset) => {\n                  gotoPage(offset / pageSize)\n                }}\n              />\n            )\n          }}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default SelectTable\n",["235","236"],"/Users/adam/fintech-dashboard/src/components/Comparison/index.js",[],["237","238"],"/Users/adam/fintech-dashboard/src/components/Comparison/Metric/2X2.d3.js",[],"/Users/adam/fintech-dashboard/src/components/Comparison/List/Table.js",[],"/Users/adam/fintech-dashboard/src/components/Comparison/Metric/index.js",["239","240"],"import React, { useRef, useState, useEffect, useContext } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\n\nimport { Context } from \"../../../contexts/CompaniesContext\"\nimport D32X2 from \"./2X2.d3\"\n\nconst useStyles = makeStyles({\n  chartWrapper: {\n    flex: 1,\n    display: \"flex\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\"\n  },\n})\n\nconst Metric = ({ isMobile }) => {\n  const classes = useStyles()\n  const chartArea = useRef(null)\n  const [chart, setChart] = useState(null)\n  const [chartSet, setChartSet] = useState(null)\n  const {\n    state: { companies, selectedIndices, capabilities, adaptabilities },\n  } = useContext(Context)\n\n  const selectedCompanies = selectedIndices.map(index => companies[index])\n  const selectedCapabilities = capabilities.filter(cap => cap.selected)\n  const selectedAdaptabilities = adaptabilities.filter(cap => cap.selected)\n\n  useEffect(() => {\n    if (!chart) {\n      setChart(\n        new D32X2(\n          chartArea.current,\n          selectedCompanies,\n          selectedCapabilities,\n          selectedAdaptabilities\n        )\n      )\n    } else {\n      if (chartSet) {\n        chart.update(\n          selectedCompanies,\n          selectedCapabilities,\n          selectedAdaptabilities\n        )\n      }\n    }\n  }, [chart, selectedCompanies, selectedCapabilities, selectedAdaptabilities])\n\n  // set width/height\n  useEffect(() => {\n    if (chartArea && chart) {\n      const { offsetWidth, offsetHeight } = chartArea.current.parentElement\n      const margin = isMobile ? 20 : 40\n      chart.setDimensions(offsetWidth, offsetHeight, margin)\n      setChartSet(true)\n    }\n  }, [chartArea, chart])\n\n  return <div className={classes.chartWrapper} ref={chartArea}></div>\n}\n\nexport default Metric\n",["241","242"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Map/MapGrid.js",["243","244"],"/Users/adam/fintech-dashboard/src/components/Comparison/List/index.js",["245"],"/Users/adam/fintech-dashboard/src/components/Analytics/index.js",[],"/Users/adam/fintech-dashboard/src/components/Analytics/Metric/index.js",["246","247"],"/Users/adam/fintech-dashboard/src/components/Analytics/Metric/StackedBar.d3.js",["248"],"import * as d3 from \"d3\"\nimport \"./styles.css\"\n\nclass StackedBar {\n  constructor(element, data) {\n    let vis = this\n    vis.data = data\n\n    vis.svg = d3.select(element)\n      .append(\"svg\")\n        .attr(\"width\", 0)\n        .attr(\"height\", 0)\n    vis.g = vis.svg.append(\"g\")\n\n    // fix for format values\n    const formatSi = d3.format(\".2s\")\n    vis.formatAbbreviation = function(x) {\n      const s = formatSi(x)\n      switch (s[s.length - 1]) {\n        case \"G\": return s.slice(0, -1) + \"B\" // billions\n        case \"k\": return s.slice(0, -1) + \"K\" // thousands\n      }\n      return s\n    }\n\n    vis.xAxisCall = d3.axisBottom()\n    // vis.yAxisCall = d3.axisLeft()\n\n    vis.xAxisGroup = vis.g.append(\"g\")\n      .attr(\"class\", \"x axis invisible\")\n\n    // vis.yAxisGroup = vis.g.append(\"g\")\n    //   .attr(\"class\", \"y axis\")\n\n    vis.stack = d3.stack()\n    vis.t = () => d3.transition().duration(1000)\n    vis.color = d3.scaleOrdinal([ \"#4BC37A\", \"#3E4F5F\", \"#79899C\", ...d3.schemeSet2])\n  }\n\n  setDimensions(width, height, margin) {\n    let vis = this\n\n    vis.MARGIN = { TOP: 60, BOTTOM: margin, LEFT: 30, RIGHT: 140 }\n    vis.WIDTH = width - vis.MARGIN.LEFT - vis.MARGIN.RIGHT\n    vis.HEIGHT = height - vis.MARGIN.TOP - vis.MARGIN.BOTTOM\n\n    vis.svg\n      .attr(\"width\", vis.WIDTH + vis.MARGIN.LEFT + vis.MARGIN.RIGHT)\n      .attr(\"height\", vis.HEIGHT + vis.MARGIN.TOP + vis.MARGIN.BOTTOM)\n\n    vis.g.attr(\"transform\", `translate(${vis.MARGIN.LEFT}, ${vis.MARGIN.TOP})`)\n\n    vis.x = d3.scaleBand()\n      .range([0, vis.WIDTH])\n      .padding(0.3)\n    vis.y = d3.scaleLinear()\n      .range([vis.HEIGHT, 0])\n\n    vis.xAxisGroup.attr(\"transform\", `translate(0, ${vis.HEIGHT})`)\n  }\n\n  update(data, yValue = \"Amount\", gValue = \"ReportRegion1\", fromDate = \"2014-01-01\", toDate = \"2021-01-01\") {\n    let vis = this\n    vis.data = data || vis.data\n\n    vis.gKeys = vis.data.reduce((acc, curr) => \n      [...new Set([...acc, curr[gValue]])], \n    [])\n\n    vis.stack.keys(vis.gKeys)\n    vis.stack.order(d3.stackOrderNone);\n    vis.stack.offset(d3.stackOffsetNone);\n\n    const reducer = v => {\n      if (yValue === \"number\") {\n        return v.reduce((acc, curr) => \n          [...new Set([...acc, curr[\"Company\"]])], \n        []).length\n      } else {\n        return d3.sum(\n          v, d => Number(d[yValue]?.replace(/,/g, '') || 0)  // remove commas\n        )\n      }\n    }\n\n    const dataByFunding = d3.rollups(\n      vis.data, \n      reducer,\n      d => d[\"FundingYear\"],\n      d => d[gValue]\n    )\n\n    const stringToYear = str => str.split(\"-\")[0]\n\n    const timeFilteredDataByFunding = dataByFunding.filter(([year, _]) => (\n      Number(year) >= Number(stringToYear(fromDate)) && \n      Number(year) <= Number(stringToYear(toDate))\n    ))\n\n    const dataAsObjects = timeFilteredDataByFunding.map(([year, values]) => {\n      const vals = values.reduce((acc, [key, val]) => (\n        { ...acc, [key]: val }\n      ), {})\n      // get rid of NaNs\n      const blankVals = vis.gKeys.reduce((acc, key) => (\n        { ...acc, [key]: 0 }\n      ), {})\n      return {\n        year,\n        ...blankVals,\n        ...vals\n      }\n    }).sort((a, b) => Number(a.year) - Number(b.year))\n    \n    const yearTotals = dataAsObjects.map(d => (\n      { ...d, total: d3.sum(vis.gKeys, r => d[r]) }\n    ))\n\n    vis.x.domain(dataAsObjects.map(d => d.year))\n    vis.y.domain([0, d3.max(yearTotals, d => d.total)])\n\n    vis.xAxisCall.scale(vis.x)\n    vis.xAxisGroup.transition(vis.t).call(vis.xAxisCall)\n    // vis.yAxisCall.scale(vis.y)\n    // vis.yAxisGroup.transition(vis.t).call(vis.yAxisCall.tickFormat(vis.formatAbbreviation))\n  \n    vis.groups = vis.g.selectAll(\"g.bars1\")\n      .data(vis.stack(dataAsObjects), d => d.key)\n      .join(\n          enter => (\n            enter.append(\"g\")\n              .attr(\"class\", \"bars1\")\n              .style(\"fill\", (d, i) => vis.color(d.key))\n          ),\n          update => (\n            update.style(\"fill\", (d, i) => vis.color(d.key))\n          ),\n          exit => exit.remove()\n        )\n\n    vis.topLabels = vis.g.selectAll(\"text.top-label\")\n      .data(yearTotals, d => d.year)\n      .join(\n          enter => (\n            enter.append(\"text\")\n              .attr(\"class\", \"top-label\")\n              .attr(\"y\", d => vis.y(d.total))\n              .attr(\"x\", d => vis.x(d.year) + vis.x.bandwidth() / 2)\n              .attr(\"dy\", -10)\n              .style(\"fill\", '#333333')\n              .attr(\"text-anchor\", \"middle\")\n          ),\n          update => update.call(update => (\n            update.transition(vis.t)\n              .attr(\"y\", d => vis.y(d.total))\n              .attr(\"x\", d => vis.x(d.year) + vis.x.bandwidth() / 2)\n          )),\n          exit => exit.remove()\n        )\n      .text(d => yValue === \"Amount\" \n        ? vis.formatAbbreviation(d.total) \n        : d.total\n      )\n\n    vis.rects = vis.groups.selectAll(\".bar\")\n      .data(d => d , d => d.data.year)\n      .join(\n          enter => (\n            enter.append(\"rect\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", d => vis.x(d.data.year))\n              .attr(\"y\", d => vis.y(d[1]))\n              .attr(\"height\", d => vis.y(d[0]) - vis.y(d[1]))\n              .attr(\"width\", vis.x.bandwidth)\n          ),\n          update => update.call(update => (\n            update.transition(vis.t)\n              .attr(\"x\", d => vis.x(d.data.year))\n              .attr(\"y\", d => vis.y(d[1]))\n              .attr(\"height\", d => vis.y(d[0]) - vis.y(d[1]))\n              .attr(\"width\", vis.x.bandwidth)\n          )),\n          exit => exit.remove()\n        )\n\n    vis.labels = vis.groups.selectAll(\".bar-label\")\n      .data(d => d, d => d.data.year)\n      .join(\n          enter => (\n            enter.append(\"text\")\n              .attr(\"class\", \"bar-label\")\n              .attr(\"y\", d => vis.y(d[1]) + (vis.y(d[0]) - vis.y(d[1])) / 2 )\n              .attr(\"x\", d => vis.x(d.data.year) + vis.x.bandwidth() / 2)\n              .attr(\"dy\", 6)\n              .style(\"fill\", '#ffffff')\n              .attr(\"text-anchor\", \"middle\")\n          ),\n          update => update.call(update => (\n            update.transition(vis.t)\n              .attr(\"y\", d => vis.y(d[1]) + (vis.y(d[0]) - vis.y(d[1])) / 2 )\n              .attr(\"x\", d => vis.x(d.data.year) + vis.x.bandwidth() / 2)\n          )),\n          exit => exit.remove()\n        )\n      .style(\"display\", d => (\n        vis.y(d[0]) - vis.y(d[1])) < 15  || vis.x.bandwidth() < 20\n        ? \"none\" : \"inline\" \n      )\n      .text(d => yValue === \"Amount\" \n          ? vis.formatAbbreviation(d[1] - d[0]) \n          : (d[1] - d[0])\n        )\n\n    vis.updateLegend()\n  }\n\n  updateLegend() {\n    const vis = this\n\n    vis.g.selectAll(\".legendGroup\").remove()\n\n    const legend = vis.g.append(\"g\")\n      .attr(\"class\", \"legendGroup\")\n      .attr(\"transform\", `translate(${vis.WIDTH + 110}, 0)`)\n\n    const legendArray = vis.gKeys.map(k => (\n      { label: k, color: vis.color(k) }\n    ))\n\n    const legendRow = legend.selectAll(\".legendRow\")\n      .data(legendArray)\n      .enter().append(\"g\")\n        .attr(\"class\", \"legendRow\")\n        .attr(\"transform\", (d, i) => `translate(0, ${i * 20})`)\n    \n      legendRow.append(\"rect\")\n        .attr(\"width\", 10)\n        .attr(\"height\", 10)\n        .attr(\"fill\", d => d.color)\n    \n      legendRow.append(\"text\")\n        .attr(\"x\", -10)\n        .attr(\"y\", 10)\n        .attr(\"text-anchor\", \"end\")\n        .style(\"text-transform\", \"capitalize\")\n        .text(d => d.label)\n  }\n}\n\nexport default StackedBar\n","/Users/adam/fintech-dashboard/src/contexts/FundingContext.js",[],"/Users/adam/fintech-dashboard/src/hooks/useIsMobile.js",[],"/Users/adam/fintech-dashboard/src/components/Profile/index.js",[],"/Users/adam/fintech-dashboard/src/components/Profile/Sidebar.js",[],"/Users/adam/fintech-dashboard/src/components/shared/MPButtonGroup.js",[],"/Users/adam/fintech-dashboard/src/components/Header.js",["249","250"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { Container, makeStyles, InputBase } from \"@material-ui/core\"\nimport { Search } from \"@material-ui/icons\"\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\nimport parse from \"autosuggest-highlight/parse\"\nimport match from \"autosuggest-highlight/match\"\n\nimport logo from \"../images/fct-logo.svg\"\nimport { Context as CompaniesContext } from \"../contexts/CompaniesContext\"\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: \"#ffffff\",\n    height: \"60px\",\n    boxShadow: \"0px 1px 0px #EBEFF4\",\n  },\n  spreader: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  logoWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  logo: {\n    height: \"37px\",\n    marginBottom: 0,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"#EAF8F1\",\n    marginLeft: theme.spacing(2),\n    width: \"auto\",\n  },\n  searchIcon: {\n    padding: \"0px 10px\",\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"400px\",\n    },\n  },\n  endAdornment: {\n    right: 10,\n  },\n  autocomplete: {\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"450px\",\n    },\n  },\n  input: {\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"400px\",\n    },\n  },\n}))\n\nconst Header = ({ setRootView, setTaxonomyView }) => {\n  const classes = useStyles()\n  const {\n    state: { companies },\n    setFilter,\n  } = useContext(CompaniesContext)\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [options, setOptions] = useState(null)\n  useEffect(() => {\n    if (comps.map(b => b.name).includes(searchTerm)) {\n      setRootView(\"Profile\")\n    } else if (businessLines.map(b => b.name).includes(searchTerm)) {\n      setOptions([\n        ...region1s.map(region => ({\n          name: `${searchTerm} in ${region.name}`,\n        })),\n      ])\n    }\n  }, [searchTerm])\n\n  const comps = [{ name: \"Up Bank\", path: \"Profile\" }]\n  const businessLines = [\n    ...companies\n      .reduce((acc, curr) => [...new Set([...acc, curr[\"L2 (Bank Type)\"]])], [])\n      .map(name => ({ name, key: name, path: \"List\" })),\n    { name: \"Companies\", key: \"All\", path: \"List\" },\n  ]\n  const region1s = companies\n    .reduce((acc, curr) => [...new Set([...acc, curr[\"ReportRegion1\"]])], [])\n    .map(name => ({ name, path: \"List\" }))\n\n  const handleEnter = event => {\n    // horrible code - will need re-writing\n    if (event.key === \"Enter\") { // redirect\n      if (comps.map(b => b.name).includes(searchTerm)) {\n        setRootView(\"Profile\")\n      } else {\n        businessLines.forEach(b => {\n          if (searchTerm.indexOf(b.name) > -1) {\n            setRootView(\"Taxonomy\")\n            setTaxonomyView(\"List\")\n            businessLines.forEach(b => {\n              if (searchTerm.indexOf(b.name) > -1) {\n                setFilter({\n                  key: \"L2 (Bank Type)\",\n                  type: \"choice\",\n                  name: \"Bank Type\",\n                  value: b.key,\n                  display: false,\n                })\n              }\n            })\n            region1s.forEach(r => {\n              if (searchTerm.indexOf(r.name) > -1) {\n                const values = [\n                  { key: \"emea\", name: \"EMEA\", selected: false },\n                  {\n                    key: \"americas\",\n                    name: \"Americas\",\n                    selected: false,\n                  },\n                  { key: \"apac\", name: \"APAC\", selected: false },\n                ].map(v => (v.name === r.name ? { ...v, selected: true } : v))\n                setFilter({\n                  key: \"ReportRegion1\",\n                  name: \"Region\",\n                  type: \"checkboxes\",\n                  values,\n                  display: true,\n                })\n              }\n            })\n          }\n        })\n      }\n    }\n  }\n\n  return (\n    <header className={classes.header}>\n      <Container className={classes.spreader} maxWidth=\"xl\">\n        <a href=\"/\" className={classes.logoWrapper}>\n          <img src={logo} className={classes.logo} alt=\"logo\" />\n        </a>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <Search />\n          </div>\n          <Autocomplete\n            autoSelect\n            className={classes.autocomplete}\n            options={options || [...businessLines, ...comps]}\n            getOptionLabel={option => option.name}\n            freeSolo\n            onKeyDown={e => handleEnter(e)}\n            onClose={(event, reason) => {\n              if (reason === \"select-option\") {\n                const path = event.target?.firstChild?.attributes?.path?.value\n                setSearchTerm(event.target.innerText)\n              }\n            }}\n            onInputChange={(event, value, reason) => {\n              if (reason === \"clear\") {\n                setSearchTerm(\"\")\n                setOptions(null)\n              }\n            }}\n            renderInput={params => {\n              return (\n                <div ref={params.InputProps.ref} className={classes.input}>\n                  <InputBase\n                    placeholder=\"Search for business lines or companies...\"\n                    {...params.inputProps}\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                      adornedEnd: classes.endAdornment,\n                    }}\n                    endAdornment={params.InputProps.endAdornment}\n                  />\n                </div>\n              )\n            }}\n            renderOption={(option, { inputValue }) => {\n              const matches = match(option.name, inputValue)\n              const parts = parse(option.name, matches)\n\n              return (\n                <div path={option.path}>\n                  {parts.map((part, index) => (\n                    <span\n                      key={index}\n                      style={{ fontWeight: part.highlight ? 700 : 400 }}\n                    >\n                      {part.text}\n                    </span>\n                  ))}\n                </div>\n              )\n            }}\n          />\n        </div>\n      </Container>\n    </header>\n  )\n}\n\nexport default Header","/Users/adam/fintech-dashboard/src/contexts/TaxonomyContext.js",[],"/Users/adam/fintech-dashboard/src/icons/List.js",[],["251","252"],"/Users/adam/fintech-dashboard/src/icons/Chart.js",[],"/Users/adam/fintech-dashboard/src/icons/Export.js",[],"/Users/adam/fintech-dashboard/src/components/shared/AntTab.js",[],"/Users/adam/fintech-dashboard/src/components/Comparison/Filters/index.js",[],"/Users/adam/fintech-dashboard/src/contexts/CompaniesContext.js",[],"/Users/adam/fintech-dashboard/src/icons/Dashboard.js",[],"/Users/adam/fintech-dashboard/src/data.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"/Users/adam/fintech-dashboard/src/icons/Bubble.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/Bubble.d3.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Map/MapGrid.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/index.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Tree.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Map/index.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/index.js",["270"],"/Users/adam/fintech-dashboard/src/contexts/createDataContext.js",["271"],"import React, { useReducer } from 'react';\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValue);\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","/Users/adam/fintech-dashboard/src/components/Breadcrumbs.js",["272"],"import React, { useContext } from \"react\"\nimport {\n  Breadcrumbs as MaterialBreadcrumbs,\n  Typography,\n  makeStyles,\n  Link,\n} from \"@material-ui/core\"\nimport { NavigateNext } from \"@material-ui/icons\"\n\nimport { Context as TaxonomyContext } from \"../contexts/TaxonomyContext\"\nimport useIsMobile from \"../hooks/useIsMobile\"\n\n// const useStyles = makeStyles({})\n\nconst Breadcrumbs = () => {\n  // const classes = useStyles()\n  const isMobile = useIsMobile()\n  const {\n    state: { activeNode },\n  } = useContext(TaxonomyContext)\n\n  const generateCrumbs = node =>\n    node\n      ? node.parent\n        ? [...generateCrumbs(node.parent), { name: node.data.name, node }]\n        : [{ name: node.data.name, node }]\n      : [{ name: \"Business Line\", node: null }]\n\n  if (isMobile) return null\n  return (\n    <MaterialBreadcrumbs separator={<NavigateNext fontSize=\"small\" />}>\n      {generateCrumbs(activeNode).map((crumb, i) => {\n        if (i + 1 === generateCrumbs(activeNode).length)\n          return (\n            <Typography key={crumb.name} color=\"textPrimary\">\n              {crumb.name}\n            </Typography>\n          )\n        else\n          return (\n            <Link key={crumb.name} onClick={() => {}}>\n              {crumb.name}\n            </Link>\n          )\n      })}\n    </MaterialBreadcrumbs>\n  )\n}\n\nexport default Breadcrumbs\n",["273","274"],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Filters/index.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/List/ColumnFilter.js",[],"/Users/adam/fintech-dashboard/src/index.js",[],"/Users/adam/fintech-dashboard/src/components/Profile/Navigation.js",["275","276"],"import React, { useState, useContext } from \"react\"\nimport {\n  makeStyles,\n  Paper,\n  Typography,\n  Tabs,\n  Breadcrumbs,\n} from \"@material-ui/core\"\nimport { NavigateNext, Home } from \"@material-ui/icons\"\n\nimport AntTab from \"../shared/AntTab\"\nimport overview from \"../../images/profile/overview.svg\"\nimport use_case from \"../../images/profile/use_case.svg\"\nimport partnerships from \"../../images/profile/partnerships.svg\"\nimport news from \"../../images/profile/news.svg\"\n\nimport useIsMobile from \"../../hooks/useIsMobile\"\n\nconst useStyles = makeStyles({\n  padding: {\n    border: \"4px solid #f8fafc\",\n    boxSizing: \"border-box\",\n  },\n  root: {\n    flexDirection: \"column\",\n    flex: 1,\n    display: \"flex\",\n    width: \"100%\",\n    border: \"1px solid #E7ECF3\",\n    boxSizing: \"border-box\",\n  },\n  breadcrumbsContainer: {\n    borderBottom: \"1px solid #E7ECF3\",\n    padding: \"10px\",\n  },\n  breadcrumbs: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  homeIcon: {\n    display: \"flex\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  comparisonText: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  spreader: {\n    display: \"flex\",\n    padding: \"0px 10px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    maxWidth: \"100%\",\n  },\n  title: {\n    fontSize: \"18px\",\n    minWidth: \"100px\",\n    fontWeight: \"600\",\n  },\n  tabs: {\n    flexShrink: 1,\n  },\n  section: {\n    paddingTop: \"10px\",\n    width: \"100%\",\n  },\n})\n\nconst Navigation = ({ setRootView }) => {\n  const classes = useStyles()\n  const [selectedTab, setSelectedTab] = useState(0)\n  const isMobile = useIsMobile()\n  const options = [overview, null, use_case, partnerships, news]\n\n  return (\n    <>\n      <div className={classes.padding}>\n        <Paper className={classes.root} elevation={0}>\n          <div className={classes.breadcrumbsContainer}>\n            <Breadcrumbs\n              separator={<NavigateNext fontSize=\"small\" />}\n              className={classes.breadcrumbs}\n            >\n              <Home\n                classes={{ root: classes.homeIcon }}\n                onClick={() => setRootView(\"Taxonomy\")}\n              />\n              <Typography\n                className={classes.comparisonText}\n                onClick={() => setRootView(\"Comparison\")}\n              >\n                Comparison\n              </Typography>\n              <Typography>Up Bank</Typography>\n            </Breadcrumbs>\n          </div>\n          <div className={classes.spreader}>\n            <Typography className={classes.title} variant=\"h4\">\n              Up Bank\n            </Typography>\n            <Tabs\n              className={classes.tabs}\n              indicatorColor=\"primary\"\n              value={selectedTab}\n              onChange={(_, v) => setSelectedTab(v)}\n              variant=\"scrollable\"\n              scrollButtons=\"off\"\n              style={{ width: isMobile ? \"250px\" : \"auto\" }}\n            >\n              <AntTab label=\"Overview\" id={0} />\n              <AntTab label=\"Traction\" id={1} disabled />\n              <AntTab label=\"Use Case\" id={2} />\n              <AntTab label=\"Partnerships\" id={3} />\n              <AntTab label=\"News\" id={4} />\n            </Tabs>\n          </div>\n        </Paper>\n      </div>\n      <img className={classes.section} src={options[selectedTab]} />\n    </>\n  )\n}\n\nexport default Navigation\n","/Users/adam/fintech-dashboard/src/icons/Filter.js",[],["277","278"],"/Users/adam/fintech-dashboard/src/components/shared/Accordion.js",[],"/Users/adam/fintech-dashboard/src/icons/Swap.js",[],["279","280"],"/Users/adam/fintech-dashboard/src/components/shared/MPButton.js",[],"/Users/adam/fintech-dashboard/src/data/logos.js",[],"/Users/adam/fintech-dashboard/src/components/Comparison/Filters/XCheckboxes.js",[],"/Users/adam/fintech-dashboard/src/components/Comparison/Filters/YCheckboxes.js",[],"/Users/adam/fintech-dashboard/src/theme.js",[],"/Users/adam/fintech-dashboard/src/components/Taxonomy/Altas/Bubble/Sunburst.d3.js",["281"],{"ruleId":"282","severity":1,"message":"283","line":2,"column":34,"nodeType":"284","messageId":"285","endLine":2,"endColumn":44},{"ruleId":"282","severity":1,"message":"286","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":21},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"287","replacedBy":"291"},{"ruleId":"289","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":70,"column":6,"nodeType":"295","endLine":70,"endColumn":8,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"297","line":88,"column":5,"nodeType":"295","endLine":88,"endColumn":14,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"299","line":86,"column":6,"nodeType":"295","endLine":86,"endColumn":22,"suggestions":"300"},{"ruleId":"287","replacedBy":"301"},{"ruleId":"289","replacedBy":"302"},{"ruleId":"287","replacedBy":"303"},{"ruleId":"289","replacedBy":"304"},{"ruleId":"293","severity":1,"message":"305","line":49,"column":6,"nodeType":"295","endLine":49,"endColumn":78,"suggestions":"306"},{"ruleId":"293","severity":1,"message":"307","line":59,"column":6,"nodeType":"295","endLine":59,"endColumn":24,"suggestions":"308"},{"ruleId":"287","replacedBy":"309"},{"ruleId":"289","replacedBy":"310"},{"ruleId":"282","severity":1,"message":"311","line":1,"column":17,"nodeType":"284","messageId":"285","endLine":1,"endColumn":25},{"ruleId":"282","severity":1,"message":"312","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":37},{"ruleId":"293","severity":1,"message":"313","line":97,"column":6,"nodeType":"295","endLine":97,"endColumn":52,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":47,"column":3,"nodeType":"317","messageId":"318","endLine":47,"endColumn":8},{"ruleId":"293","severity":1,"message":"307","line":105,"column":6,"nodeType":"295","endLine":105,"endColumn":24,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":19,"column":7,"nodeType":"322","messageId":"323","endLine":22,"endColumn":8},{"ruleId":"293","severity":1,"message":"324","line":93,"column":6,"nodeType":"295","endLine":93,"endColumn":18,"suggestions":"325"},{"ruleId":"282","severity":1,"message":"326","line":172,"column":23,"nodeType":"284","messageId":"285","endLine":172,"endColumn":27},{"ruleId":"287","replacedBy":"327"},{"ruleId":"289","replacedBy":"328"},{"ruleId":"282","severity":1,"message":"329","line":1,"column":8,"nodeType":"284","messageId":"285","endLine":1,"endColumn":22},{"ruleId":"282","severity":1,"message":"330","line":2,"column":8,"nodeType":"284","messageId":"285","endLine":2,"endColumn":18},{"ruleId":"282","severity":1,"message":"331","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":17},{"ruleId":"282","severity":1,"message":"332","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":24},{"ruleId":"282","severity":1,"message":"333","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":24},{"ruleId":"282","severity":1,"message":"334","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":15},{"ruleId":"282","severity":1,"message":"335","line":7,"column":8,"nodeType":"284","messageId":"285","endLine":7,"endColumn":18},{"ruleId":"282","severity":1,"message":"336","line":8,"column":8,"nodeType":"284","messageId":"285","endLine":8,"endColumn":21},{"ruleId":"282","severity":1,"message":"337","line":9,"column":8,"nodeType":"284","messageId":"285","endLine":9,"endColumn":30},{"ruleId":"282","severity":1,"message":"338","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":16},{"ruleId":"282","severity":1,"message":"339","line":11,"column":8,"nodeType":"284","messageId":"285","endLine":11,"endColumn":22},{"ruleId":"282","severity":1,"message":"340","line":12,"column":8,"nodeType":"284","messageId":"285","endLine":12,"endColumn":26},{"ruleId":"282","severity":1,"message":"341","line":13,"column":8,"nodeType":"284","messageId":"285","endLine":13,"endColumn":24},{"ruleId":"282","severity":1,"message":"342","line":14,"column":8,"nodeType":"284","messageId":"285","endLine":14,"endColumn":21},{"ruleId":"282","severity":1,"message":"343","line":15,"column":8,"nodeType":"284","messageId":"285","endLine":15,"endColumn":30},{"ruleId":"282","severity":1,"message":"344","line":16,"column":8,"nodeType":"284","messageId":"285","endLine":16,"endColumn":16},{"ruleId":"282","severity":1,"message":"345","line":17,"column":8,"nodeType":"284","messageId":"285","endLine":17,"endColumn":23},{"ruleId":"293","severity":1,"message":"346","line":37,"column":6,"nodeType":"295","endLine":37,"endColumn":19,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":3,"column":1,"nodeType":"350","endLine":22,"endColumn":3},{"ruleId":"282","severity":1,"message":"351","line":5,"column":3,"nodeType":"284","messageId":"285","endLine":5,"endColumn":13},{"ruleId":"287","replacedBy":"352"},{"ruleId":"289","replacedBy":"353"},{"ruleId":"282","severity":1,"message":"312","line":1,"column":27,"nodeType":"284","messageId":"285","endLine":1,"endColumn":37},{"ruleId":"354","severity":1,"message":"355","line":122,"column":7,"nodeType":"356","endLine":122,"endColumn":69},{"ruleId":"287","replacedBy":"357"},{"ruleId":"289","replacedBy":"358"},{"ruleId":"287","replacedBy":"359"},{"ruleId":"289","replacedBy":"360"},{"ruleId":"282","severity":1,"message":"336","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":21},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'AccountTree' is defined but never used.","no-native-reassign",["361"],"no-negated-in-lhs",["362"],["361"],["362"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAdaptabilities', 'setCapabilities', 'setCompaniesData', 'setFundingData', and 'setLogos'. Either include them or remove the dependency array.","ArrayExpression",["363"],"React Hook React.useMemo has missing dependencies: 'classes.companyWrapper', 'classes.logo', 'classes.logoWrapper', and 'selectedIndices.length'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'setSelectedRows'. Either include it or remove the dependency array. If 'setSelectedRows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["365"],["361"],["362"],["361"],["362"],"React Hook useEffect has a missing dependency: 'chartSet'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has a missing dependency: 'isMobile'. Either include it or remove the dependency array.",["367"],["361"],["362"],"'useState' is defined but never used.","'useContext' is defined but never used.","React Hook React.useMemo has missing dependencies: 'classes.companyWrapper', 'classes.logo', and 'classes.logoWrapper'. Either include them or remove the dependency array.",["368"],"no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","unexpected",["369"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'businessLines', 'comps', 'region1s', and 'setRootView'. Either include them or remove the dependency array. If 'setRootView' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["370"],"'path' is assigned a value but never used.",["361"],["362"],"'capitalMarkets' is defined but never used.","'smeBanking' is defined but never used.","'insurance' is defined but never used.","'wealthManagement' is defined but never used.","'corporateBanking' is defined but never used.","'support' is defined but never used.","'technology' is defined but never used.","'retailBanking' is defined but never used.","'lendingAndCrowdfunding' is defined but never used.","'payments' is defined but never used.","'retailAccounts' is defined but never used.","'accountsAndSavings' is defined but never used.","'financialBanking' is defined but never used.","'smeAccounting' is defined but never used.","'digitalChallengerBanks' is defined but never used.","'neobanks' is defined but never used.","'challengerBanks' is defined but never used.","React Hook useEffect has missing dependencies: 'activeNode', 'chartSet', and 'setActiveNode'. Either include them or remove the dependency array.",["371"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'makeStyles' is defined but never used.",["361"],["362"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["361"],["362"],["361"],["362"],"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"380","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},"Update the dependencies array to be: [setAdaptabilities, setCapabilities, setCompaniesData, setFundingData, setLogos]",{"range":"389","text":"390"},"Update the dependencies array to be: [classes.companyWrapper, classes.logo, classes.logoWrapper, columns, selectedIndices.length]",{"range":"391","text":"392"},"Update the dependencies array to be: [selectedRowIds, setSelectedRows]",{"range":"393","text":"394"},"Update the dependencies array to be: [chart, selectedCompanies, selectedCapabilities, selectedAdaptabilities, chartSet]",{"range":"395","text":"396"},"Update the dependencies array to be: [chartArea, chart, isMobile]",{"range":"397","text":"398"},"Update the dependencies array to be: [selectedTab, selectedCapabilities, textAdaps, classes.companyWrapper, classes.logoWrapper, classes.logo]",{"range":"399","text":"400"},{"range":"401","text":"398"},"Update the dependencies array to be: [businessLines, comps, region1s, searchTerm, setRootView]",{"range":"402","text":"403"},"Update the dependencies array to be: [activeNode, chart, chartSet, setActiveNode, tree]",{"range":"404","text":"405"},[2265,2267],"[setAdaptabilities, setCapabilities, setCompaniesData, setFundingData, setLogos]",[2232,2241],"[classes.companyWrapper, classes.logo, classes.logoWrapper, columns, selectedIndices.length]",[1580,1596],"[selectedRowIds, setSelectedRows]",[1297,1369],"[chart, selectedCompanies, selectedCapabilities, selectedAdaptabilities, chartSet]",[1656,1674],"[chartArea, chart, isMobile]",[3000,3046],"[selectedTab, selectedCapabilities, textAdaps, classes.companyWrapper, classes.logoWrapper, classes.logo]",[2184,2202],[2283,2295],"[businessLines, comps, region1s, searchTerm, setRootView]",[868,881],"[activeNode, chart, chartSet, setActiveNode, tree]"]